(defvar *emacs-base* (file-name-directory (file-truename user-init-file)))
(defvar *emacs-lib-base* (concat *emacs-base* "libs/"))
(add-to-list 'load-path *emacs-base*)
(add-to-list 'load-path *emacs-lib-base*)

(require 'shaneal-user-interface) ;;color-theme, etc
(require 'shaneal-misc) ;;ido, encoding, backup files, et
(require 'shaneal-lisp) ;;paredit, slime, etc
(require 'shaneal-haskell) ;;haskell-mode
(require 'shaneal-web) ;;js2 and nxml
(require 'shaneal-latex)


;; ;;os specific code
;; (cond ((or (string-equal system-type "darwin") (string-equal system-type "mac"))
;;        (setq common-lisp-hyperspec-root "file:///Users/smanek/elisp/HyperSpec/"))
;;       (t ;;otherwise assume we're in linux/bsd
;;        (setq common-lisp-hyperspec-root "~/elisp/HyperSpec/")))

;; ;;c++
;; (require 'cc-mode)
;; (define-key c++-mode-map "\C-c\C-c" 'compile)
;; (c-toggle-hungry-state 1)

;; ;;eshell
;; (defun eshell-maybe-bol ()
;;   (interactive)
;;   (let ((p (point)))
;;     (eshell-bol)
;;     (if (= p (point))
;; 	(beginning-of-line))))
;; (add-hook 'eshell-mode-hook
;; 	  '(lambda () (define-key eshell-mode-map "\C-a" 'eshell-maybe-bol)))


;; ;;emacs client stuff
;; (server-start)

;; ;;clojure
;; ;(setq clojure-enable-paredit t)
;; (require 'swank-clojure)
;; (autoload 'clojure-mode "clojure-mode" "A major mode for Clojure" t)
;; (add-to-list 'auto-mode-alist '("\\.clj$" . clojure-mode))


;; ;;allow me to output my frame to html
;; (require 'htmlize) 

;; ;;Perl
;; (mapc
;;  (lambda (pair)
;;    (if (eq (cdr pair) 'perl-mode)
;;        (setcdr pair 'cperl-mode)))
;;  (append auto-mode-alist interpreter-mode-alist))



;; ;;Misc
;; (global-set-key "\C-h" 'backward-delete-char)
;; (global-set-key (kbd "C-c c") 'comment-dwim)




;; ;;python
;; (require 'python)
;; (defun my-python-indent-setup ()
;;   (setq indent-tabs-mode nil)
;;   (setq py-indent-offset 4))
;; (add-hook 'python-mode-hook 'my-python-indent-setup)

;; ;;Latex

;; ;;tramp
;; (require 'tramp)
;; (custom-set-variables
;;   ;; custom-set-variables was added by Custom.
;;   ;; If you edit it by hand, you could mess it up, so be careful.
;;   ;; Your init file should contain only one such instance.
;;   ;; If there is more than one, they won't work right.
;;  '(safe-local-variable-values (quote ((Syntax . COMMON-LISP) (Package . HTML-TEMPLATE) (Base . 10)))))
;; (custom-set-faces
;;   ;; custom-set-faces was added by Custom.
;;   ;; If you edit it by hand, you could mess it up, so be careful.
;;   ;; Your init file should contain only one such instance.
;;   ;; If there is more than one, they won't work right.
;;  )


;; ;;; This was installed by package-install.el.
;; ;;; This provides support for the package system and
;; ;;; interfacing with ELPA, the package archive.
;; ;;; Move this code earlier if you want to reference
;; ;;; packages in your .emacs.
;; ;(when
;; ;    (load
;; ;     (expand-file-name "~/.emacs.d/elpa/package.el"))
;; ;  (package-initialize))
